name: srv

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: olegpronkin/srv:latest

  copy_data:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Create projects directory
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo rm -rf multithread_web_server
            mkdir -p multithread_web_server
      - name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: multithread_web_server
          remote: /home/${{ secrets.USER }}/multithread_web_server/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@v0.1.4
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             sudo docker pull olegpronkin/srv
#             sudo docker-compose stop
#             sudo docker-compose rm srv
#             sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
